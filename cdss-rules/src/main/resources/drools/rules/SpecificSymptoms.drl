import com.aleknik.cdss.cdssservice.model.Patient;
import com.aleknik.cdss.cdssservice.model.Diagnosis;
import com.aleknik.cdss.cdssservice.model.Symptom;
import com.aleknik.cdss.cdssservice.model.Disease;
import com.aleknik.cdss.cdssservice.model.Medicine;
import com.aleknik.cdss.cdssservice.model.MedicineType;
import com.aleknik.cdss.cdssservice.util.DateUtil;
import com.aleknik.cdss.cdssservice.service.SymptomService;
import com.aleknik.cdss.cdssservice.model.dto.SymptomListDto;
import com.aleknik.cdss.cdssservice.model.Disease;
import java.util.List;

rule "Bolovao od prehlade ili groznice u poslednjih 60 dana"
    salience 150
    agenda-group "diagnosis rules"
    when
        $symptomService: SymptomService()
        $symptoms: SymptomListDto($symptomList: symptoms)
        not Symptom(name.equals("Bolovao od prehlade ili groznice u poslednjih 60 dana")) from $symptomList

        Diagnosis(disease.name.equals("Prehlada") || disease.name.equals("Groznica")) over window:time( 60d )
    then
        modify($symptoms){
            getSymptoms().add($symptomService.findByName("Bolovao od prehlade ili groznice u poslednjih 60 dana"));
        }
end


rule "6 meseci 10 slučajeva visok pritisak"
    salience 150
    agenda-group "diagnosis rules"
    when
        $symptomService: SymptomService()
        $symptoms: SymptomListDto($symptomList: symptoms)
        not Symptom(name.equals("6 meseci 10 slučajeva visok pritisak")) from $symptomList

        Number(intValue >= 10) from accumulate (
             Diagnosis(disease.name.equals("Visok pritisak")) over window:time( 180d ),
            count()
        )
    then
        modify($symptoms){
            getSymptoms().add($symptomService.findByName("6 meseci 10 slučajeva visok pritisak"));
        }
end

rule "Pacijent boluje od hipertenzije više od 6 meseci"
    salience 150
    agenda-group "diagnosis rules"
    when
        $symptomService: SymptomService()
        $symptoms: SymptomListDto($symptomList: symptoms)
        not Symptom(name.equals("Pacijent boluje od hipertenzije više od 6 meseci")) from $symptomList

        $allDiagnoses: List() from collect (Diagnosis())

        Number($highPreasureCount: intValue) from accumulate (
            Diagnosis(disease.name.equals("Visok pritisak")) from $allDiagnoses,
            count()
        )
        Number(intValue < $highPreasureCount) from accumulate (
            Diagnosis(disease.name.equals("Visok pritisak")) over window:time( 180d ),
            count()
        )
    then
        modify($symptoms){
            getSymptoms().add($symptomService.findByName("Pacijent boluje od hipertenzije više od 6 meseci"));
        }
end


rule "Pacijent boluje od dijabetesa"
    salience 150
    agenda-group "diagnosis rules"
    when
        $symptomService: SymptomService()
        $symptoms: SymptomListDto($symptomList: symptoms)
        not Symptom(name.equals("Pacijent boluje od dijabetesa")) from $symptomList

        exists Diagnosis(disease.name.equals("Dijabetes"))
    then
        modify($symptoms){
            getSymptoms().add($symptomService.findByName("Pacijent boluje od dijabetesa"));
        }
end

rule "U poslednjih 14 dana dijagnostikovana bolest koja kao simptom ima povišenu telesnu temperaturu general"
    salience 150
    agenda-group "diagnosis rules"
    when
        $symptomService: SymptomService()
        $symptoms: SymptomListDto($symptomList: symptoms)
        not Symptom(name.equals("U poslednjih 14 dana dijagnostikovana bolest koja kao simptom ima povišenu telesnu temperaturu")) from $symptomList

        Diagnosis($generalSymptoms: disease.generalSymptoms) over window:time( 14d )
        exists Symptom(name.contains("Temperatura")) from $generalSymptoms
    then
        modify($symptoms){
            getSymptoms().add($symptomService.findByName("U poslednjih 14 dana dijagnostikovana bolest koja kao simptom ima povišenu telesnu temperaturu"));
        }
end


rule "U poslednjih 14 dana dijagnostikovana bolest koja kao simptom ima povišenu telesnu temperaturu specific"
    salience 150
    agenda-group "diagnosis rules"
    when
        $symptomService: SymptomService()
        $symptoms: SymptomListDto($symptomList: symptoms)
        not Symptom(name.equals("U poslednjih 14 dana dijagnostikovana bolest koja kao simptom ima povišenu telesnu temperaturu")) from $symptomList

        Diagnosis($specificSymptoms: disease.specificSymptoms) over window:time( 14d )
        exists Symptom(name.contains("Temperatura")) from $specificSymptoms
    then
        modify($symptoms){
            getSymptoms().add($symptomService.findByName("U poslednjih 14 dana dijagnostikovana bolest koja kao simptom ima povišenu telesnu temperaturu"));
        }
end


rule "U poslednjih 21 dana dijagnostikovana bolest za koju je primao antibiotike"
    salience 150
    agenda-group "diagnosis rules"
    when
        $symptomService: SymptomService()
        $symptoms: SymptomListDto($symptomList: symptoms)
        not Symptom(name.equals("U poslednjih 21 dana dijagnostikovana bolest za koju je primao antibiotike")) from $symptomList

        Diagnosis($medicines: medicines) over window:time( 21d )

        Number(intValue > 0) from accumulate (
            Medicine(medicineType == MedicineType.ANTIBIOTIC) from $medicines,
            count()
        )
    then
        modify($symptoms){
            getSymptoms().add($symptomService.findByName("U poslednjih 21 dana dijagnostikovana bolest za koju je primao antibiotike"));
        }
end