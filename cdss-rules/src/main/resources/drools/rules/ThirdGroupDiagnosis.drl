import com.aleknik.cdss.cdssservice.model.Patient;
import com.aleknik.cdss.cdssservice.model.Disease;
import com.aleknik.cdss.cdssservice.model.DiseaseGroup;
import com.aleknik.cdss.cdssservice.model.Symptom;
import com.aleknik.cdss.cdssservice.model.dto.DiagnosisResultDto;
import com.aleknik.cdss.cdssservice.model.dto.SymptomListDto;
import com.aleknik.cdss.cdssservice.model.dto.DiseaseCandidate;
import java.util.List;


rule "Third group disease"
    salience 100
    when
        $result: DiagnosisResultDto()
        not Disease(diseaseGroup == DiseaseGroup.THIRD) from $result.diseases
        $symptoms: SymptomListDto()
        $disease: Disease( diseaseGroup == DiseaseGroup.THIRD, $general: generalSymptoms, $specific: specificSymptoms)
        Number($generalCount: intValue >= 2) from accumulate(
            $s: Symptom( $symptoms.contains(name) ) from $general,
            count()
        )
        Number($specificCount: intValue >= 1) from accumulate(
            $s: Symptom( $symptoms.contains(name) ) from $specific,
            count()
        )
    then
        insert(new DiseaseCandidate($disease, $generalCount, $specificCount));
end

rule "Third group disease max symptoms"
 salience 50
 when
     $result: DiagnosisResultDto($found: diseases)
     not Disease(diseaseGroup == DiseaseGroup.THIRD) from $found
     $candidates: List() from collect(DiseaseCandidate(disease.diseaseGroup == DiseaseGroup.THIRD))

     DiseaseCandidate($disease: disease, $maxSymptomCount: getSymptomCount() / disease.getSymptomCount()) from $candidates
     not DiseaseCandidate(getSymptomCount() / disease.getSymptomCount() > $maxSymptomCount) from $candidates

 then
     modify($result){
         getDiseases().add($disease);
     }
end