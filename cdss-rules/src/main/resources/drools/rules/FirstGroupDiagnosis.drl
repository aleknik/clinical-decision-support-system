import com.aleknik.cdss.cdssservice.model.Patient;
import com.aleknik.cdss.cdssservice.model.Disease;
import com.aleknik.cdss.cdssservice.model.DiseaseGroup;
import com.aleknik.cdss.cdssservice.model.Symptom;
import com.aleknik.cdss.cdssservice.model.dto.DiagnosisResultDto;
import com.aleknik.cdss.cdssservice.model.dto.SymptomListDto;
import com.aleknik.cdss.cdssservice.model.dto.DiseaseCandidate;
import java.util.List;

rule "First group disease candidates"
    salience 100
    agenda-group "diagnosis rules"
    when
        $result: DiagnosisResultDto()
        $symptoms: SymptomListDto()
        $disease: Disease( diseaseGroup == DiseaseGroup.FIRST, $general: generalSymptoms, $specific: specificSymptoms)
        Number($generalCount: intValue) from accumulate(
            $s: Symptom( $symptoms.contains(name) ) from $general,
            count()
        )
        Number($specificCount: intValue + $generalCount >= 4) from accumulate(
            $s: Symptom( $symptoms.contains(name) ) from $specific,
            count()
        )
    then
        insert(new DiseaseCandidate($disease, $generalCount, $specificCount));
end

rule "First group disease max symptoms"
 salience 50
 agenda-group "diagnosis rules"
 when
     $result: DiagnosisResultDto($found: diseases)
     not Disease(diseaseGroup == DiseaseGroup.FIRST) from $found
     $candidates: List() from collect(DiseaseCandidate(disease.diseaseGroup == DiseaseGroup.FIRST))

     DiseaseCandidate($disease: disease, $maxSymptomCount: getSymptomCount() / disease.getSymptomCount()) from $candidates
     not DiseaseCandidate(getSymptomCount() / disease.getSymptomCount() > $maxSymptomCount) from $candidates

 then
     modify($result){
         getDiseases().add($disease);
     }
end